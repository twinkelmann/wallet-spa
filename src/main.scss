@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body,
#app {
  @apply h-screen overflow-hidden;
}
//  TODO: scroll the page instead
main {
  @apply h-screen overflow-y-auto;
}

.material-icons {
  font-family: 'Material Symbols Outlined';
  font-weight: normal;
  font-style: normal;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -moz-font-feature-settings: 'liga';
  -moz-osx-font-smoothing: grayscale;
}

// Standard style for any label
.nt-form-label {
  @apply font-medium text-gray-700;
}

// Any focusable interface control should use this focus ring for consistant styling and to facilitate keyboard navigation
.nt-focus-ring {
  @apply ring-cyan-400 ring-opacity-50 transition-shadow focus:ring-2;
}

// Standard style for an input. Gives it an outline, focus ring, fixed height and padding.
// For use with textarea, override the height with an important rule
.nt-form-input {
  @apply nt-focus-ring h-9 rounded-md border border-solid border-gray-300 bg-white px-4 font-normal text-gray-700 placeholder:font-light placeholder:text-gray-500;

  &:disabled {
    @apply cursor-not-allowed;
    filter: contrast(0.2) brightness(150%);
  }
}

.nt-form-color-input {
  @apply nt-focus-ring h-9 rounded-md border border-solid border-gray-300 bg-white p-0;
  appearance: none;

  &:disabled {
    @apply cursor-not-allowed;
    filter: contrast(0.2) brightness(150%);
  }

  &::-webkit-color-swatch-wrapper {
    padding: 0;
  }

  &::-webkit-color-swatch {
    @apply rounded-md;
    border: none;
  }
  &::-moz-color-swatch {
    @apply rounded-md;
    border: none;
  }
}

// Custom CSS for the basic button
// Combine this component with a width/grow/padding-x and a background color
.nt-button {
  @apply nt-focus-ring h-9 select-none rounded-md border-none font-medium leading-none text-gray-100 transition duration-75;

  &:disabled {
    @apply cursor-not-allowed;
    filter: contrast(0.2) brightness(150%) grayscale(1);
  }

  &:hover:not(:disabled) {
    @apply shadow;
    filter: brightness(105%) grayscale(0.2);
  }

  &:active:not(:disabled) {
    @apply shadow-none brightness-95;
  }
}

// See documentation for how to use vk-dropdown (Javascript custom dropdown menus) and vk-select (native select element with consistant styling)

// Dropdown icon for both the "fake" Vk Dropdown and the normal select element
.nt-dropdown > button:not(:disabled):after,
.nt-select:not(:disabled):after {
  @apply material-icons pointer-events-none absolute bottom-0 right-0 top-0 items-center pr-4;
  // need to say it manually to overwrite material-icons's display property
  display: flex;
  content: 'arrow_drop_down';
}
// Remove default dropdown arrow
.nt-select {
  @apply relative flex;

  > select {
    @apply w-full grow appearance-none;

    &::-ms-expand {
      display: none;
    }
  }
}

.nt-dropdown button,
.nt-select > select {
  @apply cursor-pointer select-none pl-4 pr-12 text-left;

  &:disabled {
    @apply cursor-not-allowed;
    filter: contrast(0.2) brightness(150%);
  }

  &:hover:not(:disabled) {
    @apply brightness-95;
  }
}

.nt-dropdown {
  @apply relative;
  > button,
  > ul {
    @apply w-full rounded-md border border-solid border-gray-300 bg-white;
  }

  > button {
    @apply nt-focus-ring relative h-9;
  }

  button {
    // only applies to dropdown, not select, cause it doesn't look good (stays active when the menu is open)
    &:active:not(:disabled) {
      @apply brightness-75;
    }
  }

  > ul {
    @apply pointer-events-none absolute m-0 mt-px list-none overflow-y-auto p-0 opacity-0 shadow-lg transition-opacity;
    max-height: 20vh;

    > li {
      > button {
        @apply h-9 w-full border-none bg-white;
      }
    }
  }

  > button[data-open='open'] ~ ul {
    @apply pointer-events-auto z-10 opacity-100;
  }
}

.nt-clickable {
  @apply cursor-pointer select-none;
}
